FORMAT: 1A
HOST: http://lifebelt.apiblueprint.org/

# lifebelt

Lifebelt is teachers's lifebelt to simplify 
publish, share and review homeworks and exams. Also helps students,
giving them easy way to follow and be inform about new assignments, receiving
instant review where is possible.

# Group Courses

# Courses [/courses]

## Get all courses [GET]
+ Response 200 (application/json)
        
        [{
            "id": 123,
            "initials": "PO",
            "fullname": "Програмно осигуряване",
            "description": "Запознаване със структури от данни и езикът 'С'",
            "year": 2016
        },{
            "id": 124,
            "initials": "TP",
            "fullname": "Технология на Програмирането",
            "description": "Запознаване с технологията на и при програмирането",
            "year": 2016
        },{
            "id": 125,
            "initials": "OS",
            "fullname": "Операционни Системи",
            "description": "Описание за предмета 'Операционни Системи' ",
            "year": 2016
        }]

## Create a new course [POST]
+ Attributes (object)
    + initials: PO (required, string) - Course initials
    + fullname: Програмно осигуряване (required, string) - Fully qualified name
    + description: Some course description... (optional, string) - Long text with course description. Can be markdown formated or urls.
    + year: 2016 (required, number) - Course active year

+ Response 201 (application/json)
        
        {
            "id": 123,
            "initials": "PO",
            "fullname": "Програмно осигуряване",
            "description": "Запознаване със структури от данни и езикът 'С'",
            "year": 2016
        }

# Course [/courses/{course_id}]
+ Parameters
    + course_id: 42 (required, number) - Desired course id

## Get specific course by id [GET]
+ Response 200 (application/json)
        
        {
            "id": 123,
            "initials": "PO",
            "fullname": "Програмно осигуряване",
            "description": "Запознаване със структури от данни и езикът 'С'",
            "year": 2016
        }

## Edit existing course with given id [PUT]
+ Attributes
    + initials: PO (optional, string) - Course initials
    + fullname: Програмно осигуряване (optional, string) - Fully qualified name
    + description: Some course description... (optional, string) - Long text with course description. Can be markdown formated or urls.
    + year: 2016 (optional, number) - Course active year
    
+ Response 200 (application/json)

        {
            "id": 123,
            "initials": "PO",
            "fullname": "Програмно осигуряване",
            "description": "Запознаване със структури от данни и езикът 'С'",
            "year": 2016
        }

## Delete existing course by id [DELETE]
+ Response 204

# Group Course Assignments

# Assignments [/courses/{course_id}/assignments]
+ Parameters
    + course_id: 42 (required, number) - Desired course id

## Get all course assignments [GET]
+ Response 200 (application/json)

        [{
            "id": 123,
            "name": "Програмно осигуряване",
            "description": "Запознаване със структури от данни и езикът 'С'",
            "type": "exam",
            "start": "2012-04-23T18:25:43.511Z",
            "end": "2012-04-23T18:25:43.511Z"
        },{
            "id": 124,
            "name": "Програмно осигуряване",
            "description": "Запознаване със структури от данни и езикът 'С'",
            "type": "homework",
            "start": "2012-04-23T18:25:43.511Z",
            "end": "2012-04-23T18:25:43.511Z"
        },{
            "id": 125,
            "name": "Програмно осигуряване",
            "description": "Запознаване със структури от данни и езикът 'С'",
            "type": "exam",
            "start": "2012-04-23T18:25:43.511Z",
            "end": "2012-04-23T18:25:43.511Z"
        }]

## Create new course assignment [POST]
+ Response 201

# Assignment [/courses/{course_id}/assignments/{ass_id}]
+ Parameters
    + course_id: 42 (required, number) - Desired course id
    + ass_id: 24 (required, number) - Assignment id you looking for

## Get specific course assignment by id [GET]
+ Response 200 (application/json)
        
        {
            "id": 123,
            "name": "Програмно осигуряване",
            "description": "Запознаване със структури от данни и езикът 'С'",
            "type": "homework",
            "targets": [
                "A",  
                "B",
                "ALL"
            ]
            "start": "2012-04-23T18:25:43.511Z",
            "end": "2012-04-23T18:25:43.511Z"
        }

## Update existing course assignment [PUT]
+ Response 200

## Delete existing course assignment [DELETE]
+ Response 204


# Assignment submissions [/courses/{course_id}/assignments/{ass_id}/submissions]
+ Parameters
    + course_id: 42 (required, number) - Desired course id
    + ass_id: 24 (required, number) - Assignment id you looking for

## Get all submissions for assignment [GET]
+ Response 200

## Create a new submission for this assignment [POST]
+ Response 201

# Assignment submission [/courses/{course_id}/assignments/{ass_id}/submissions/{sub_id}]
+ Parameters
    + course_id: 42 (required, number) - Desired course id
    + ass_id: 24 (required, number) - Assignment id you looking for
    + sub_id: 1 (required, number) - Submission id    

## Get a specific assignment submission by id [GET]
+ Response 200 (application/json)

        {
            "id": 123,
            "author": 42,
            "date": "2012-04-23T18:25:43.511Z",
            "pullRequest": 1234,
            "grade": 100,
            "description": "Teache me master, how to create an pull request"
            "files" : [
                {
                    "id": 1,
                    "filename": "url to uploaded raw file",
                    "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e"
                },
                {
                    "id": 2,
                    "filename": "url to uploaded raw file",
                    "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e"
                }
            ]
        }
        
## Update submission grade or description [PUT]
+ Response 200

## Delete existing assignment submission [DELETE]
+ Response 204

# Submission status [/courses/{course_id}/assignments/{ass_id}/submissions/{sub_id}/status]
## Get submission status [GET]
+ Response 200

# Submission files [/courses/{course_id}/assignments/{ass_id}/submissions/{sub_id}/files]
## Get all files [GET]
+ Response 200

## Attach new file [PUT]
+ Response 200

# Submission reviews [/courses/{course_id}/assignments/{ass_id}/submissions/{sub_id}/reviews]
+ Parameters
    + course_id: 42 (required, number) - Desired course id
    + ass_id: 24 (required, number) - Assignment id you looking for
    + sub_id: 1 (required, number) - Submission id    

## Get all submission reviews [GET]
+ Response 200

## Create a new submission review [POST]
+ Response 201

# Submission review [/courses/{course_id}/assignments/{ass_id}/submissions/{sub_id}/reviews/{review_id}]
+ Parameters
    + course_id: 42 (required, number) - Desired course id
    + ass_id: 24 (required, number) - Assignment id you looking for
    + sub_id: 1 (required, number) - Submission id    

## Get specific submission review [GET]
+ Response 200
        
        {
            "id": 42,
            "author": 123,
            "description": "бот връща gcc status, учителя пише коментар",
            "points": 10,
            "date": "2012-04-23T18:25:43.511Z" 
        }

## Update existing submission review [PUT]
+ Response 200

## Delete existing submission review [DELETE]
+ Response 204

# Group Course announcements

# Announcements [/courses/{course_id}/announcements]
## Get all course announcements [GET]
+ Response 200

## Create a new course announcement [POST]
+ Response 201

# Announcement [/courses/{course_id}/announcements/{announce_id}]
## Get specific course announcement [GET]
+ Response 200

## Update existing course announcement [PUT]
+ Response 200

## Delete existing course announcement [DELETE]
+ Response 204

# Annoncement comments [/courses/{course_id}/announcements/{announce_id}/comments]
## Get all announcement comments [GET]
+ Response 200

## Create new anouncement comment [POST]
+ Response 201

# Announcement comment [/courses/{course_id}/announcements/{announce_id}/comments/{comment_id}]

## Get specific comment 
+ Response 200

## Update existing comment
+ Response 200

## Delete existing comment
+ Response 204

# Group Course users

# Course users [/courses/{course_id}/users]

## Get all course users [GET]
+ Response 200

## Add user to course [POST]
+ Response 201

# Course user [/courses/{course_id}/users/{user_id}]

## Get course user [GET]
+ Response 200 (application/json)

        {
            "id": 123,
            "role": "student|teacher"
            "fullname": "Asen Lekov",
            "github": "L3K0V",
            "email": "asenlekoff@gmail.com",
            "details" : {
                "grade": 10,
                "class": "A",
                "number": 5
            }
        }

## Modify existing course user [PUT]
+ Response 200

## Delete existing course user [DELETE]
+ Response 204

# Group Users

# Users [/users]
## Get all users [GET]
+ Response 200

## Create a new user [POST]
+ Response 201

# User [/users/{user_id}]
## Get specific user [GET]
+ Response 200

## Edit specific user [PUT]
+ Response 200

## Delete existing user [DELETE]
+ Response 204

# Group Authentication

# Login [/login]
## POST
+ Response 201

        {
            "id": 123,
            "role": "student|teacher"
            "fullname": "Asen Lekov",
            "github": "L3K0V",
            "email": "asenlekoff@gmail.com",
            "details" : {
                "grade": 10,
                "class": "A",
                "number": 5
            },
            "token": "our litte secret here"
        }

# Logout [/logout]
## POST
+ Response 204

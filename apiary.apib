FORMAT: 1A
HOST: http://lifebelt.apiblueprint.org/

# lifebelt

Polls is a simple API allowing consumers to view polls and vote in them.

# Group Courses
Resources related to courses.

**Note:** Courses from past years are read-only.

## All courses [/courses]
Resouce which list or create courses.

### GET
Get all courses.

+ Response 200

### POST
Crate new course.

+ name (string) - short name of course.
+ fullname (string) - full name of course.
+ url (string) - GitHub url for this course. Can be repository with help documents etc...

+ Request (application/json)

            {
                "name": "PO",
                "fullname": "Програмно Осигуряване"
                "url": "https://github.com/elsys/po-course/tree/master/2015"
            }

+ Response 200

## Course [/courses/{name}/{year}]
Resource which handle course for given name.

+ Parameters
    + name (required, string, `po`) ... Courses name.
    + year (optional, number, `2014`) ... Courses year. When this parameter appears,
    **only GET is allowed**.

### GET
Get course for given name.
+ Response 200 (application/json)

        {
            "id": 123,
            "name": "po",
            "fullname": "Програмно осигуряване",
            "year": 2015,
            "url": "https://github.com/elsys/po-course/tree/master/2015"
        }

### PUT
Update existing course with name given.

+ name (string) - new short name of course.
+ fullname (string) - new full name of course.
+ url (string) - new GitHub url for this course. Can be repository with help documents etc...

+ Request (application/json)

            {
                "name": "PO",
                "fullname": "Програмно Осигуряване"
                "url": "https://github.com/elsys/po-course/tree/master/2015"
            }

+ Response 201

### DELETE
Delete existing course with name given.
+ Response 204

# Group Assignments

# All assignments [/assignments]
## GET
Returns all assignments
+ Response 200

# Course assignments [/assignments/{course}/{year}/{id}]

+ Parameters
    + course (required, string, `po`) ... Course name.
    + year (optional, number, `2014`) ... Course year. When this parameter appears,
    **only GET is allowed**
    + id (optional, number, `1`) ... Assignment ID. For example can be homework counter.
    can be combined with year parameter, but again - read-only.

## GET
Get all assignments for given course.
+ Response 200

## POST
Create a new assignment for given course.
+ Response 200

# Course assignment [/assignments/{course}/{id}]
## GET
Returns course assignment with given id
+ Response 200

## PUT
Updates course assignment with given id
+ Response 201

## DELETE
Delete course assignment with given id.
+ Response 204

# Group Submission

# All submissions [/submissions]
## GET
+ Response 200

# Course submissions [/submissions/{course}]
## GET
+ Response 200

# Course user submissions [/submissions/{course}/{user}]
## GET
+ Response 200

# User submission for course assignment [/submissions/{course}/{user}/{assignment}]
## GET
+ Response 200

## POST
+ Response 200

## PUT
+ Response 200

## DELETE
+ Response 200

# Course submissions for year [/submissions/{course}/{year}]
## GET
+ Response 200

# Course user submissions for year [/submissions/{course}/{year}/{user}]
## GET
+ Response 200

# User submission for course assignment by year [/submissions/{course}/{year}/{user}/{assignment}]
## GET
+ Response 200

## POST
+ Response 200

## PUT
+ Response 200

## DELETE
+ Response 200